term == "business" ~ "Business awareness",
term == "power" ~ "Power BI",
term == "azure" ~ "Azure",
term == "aws" ~ "AWS",
term == "creativ" ~ "Creativity",
term == "curio" ~ "Curiosity",
term == "detail" ~ "Attention to detail",
term == "communicat" ~ "Communication skills",
term == "report" ~ "Reporting experience",
term == "tableau" ~ "Tableu",
term == "data quality" ~ "Data quality management",
term == "trend" ~ "Tren analysis",
term == "vba" ~ "VBA",
term == "present" ~ "Presentation skills",
term == "project" ~ "Project management",
term == "agile" ~ "Agile",
term == "cloud" ~ "Cloud",
term == "compliance" ~ "Compliance",
term == "cooper|collab|team" ~ "Collaboration and teamwork",
term == "dashboard" ~ "Dashboard design",
term == "warehouse" ~ "Data warehouse experience",
term == "decision" ~ "Decision making experience",
term == "consulting" ~ "Consulting experience",
term == "sap" ~ "SAP",
term == "data mana" ~ "Data management",
term == "machine learn|ml" ~ "Machine learning skills",
term == "kpi" ~ "KPIs",
term == "leadership" ~ "Leadership",
term == "sql" ~ "SQL/NoSQL",
term == "automation" ~ "Automation experience",
term == "research" ~ "Research experience",
term == "reliab" ~ "Proven reliability",
term == "rest|api" ~ "API skills",
term == "stakeholder" ~ "Stakeholder management",
term == "problem" ~ "Problem solving",
term == "interpers" ~ "Interpersonal skills",
term == "(?<!\\w)r(?!\\w)" ~ "R",
term == "logist" ~ "Logistics"
)
)
skills_df %>%
head(30) %>%
mutate(
term = as_factor(term)
) %>%
ggplot(aes(x = fct_infreq(term), y = count)) +
geom_bar(stat = 'identity') +
coord_flip()
skills_df %>%
head(30) %>%
mutate(
term = as_factor(term)
) %>%
ggplot(aes(x = fct_infreq(term), y = count)) +
geom_bar(stat = 'identity') +
coord_flip() +
scale_x_reverse()
skills_df %>%
head(30) %>%
mutate(
term = as_factor(term)
) %>%
ggplot(aes(x = fct_infreq(term), y = count)) +
geom_bar(stat = 'identity') +
coord_flip() +
scale_x_discrete(limits = rev)
skills_df %>%
head(30) %>%
mutate(
term = as_factor(term)
) %>%
filter(term != "Analytics") %>% ### This category is largest - which makes sense, but we know it from the job description :)
ggplot(aes(x = fct_infreq(term), y = count)) +
geom_bar(stat = 'identity') +
coord_flip() +
scale_x_discrete(limits = rev)
skills_df %>%
head(30) %>%
mutate(
term = as_factor(term)
) %>%
filter(term != "Analytics") %>% ### This category is largest - which makes sense, but we know it from the job description :)
ggplot(aes(x = fct_infreq(term), y = count)) +
geom_bar(stat = 'identity') +
coord_flip() +
scale_x_discrete(limits = rev) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
text = element_text(family = "Corbel")#,
#axis.text.x = element_text(angle = 45, vjust = 1, hjust=1, size = 9)
)
skills_df %>%
head(30) %>%
mutate(
term = as_factor(term)
) %>%
filter(term != "Analytics") %>% ### This category is largest - which makes sense, but we know it from the job description :)
ggplot(aes(x = fct_infreq(term), y = count)) +
geom_bar(stat = 'identity', color = "steelblue") +
coord_flip() +
scale_x_discrete(limits = rev) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
text = element_text(family = "Corbel")#,
#axis.text.x = element_text(angle = 45, vjust = 1, hjust=1, size = 9)
)
skills_df %>%
head(30) %>%
mutate(
term = as_factor(term)
) %>%
filter(term != "Analytics") %>% ### This category is largest - which makes sense, but we know it from the job description :)
ggplot(aes(x = fct_infreq(term), y = count)) +
geom_bar(stat = 'identity', fill = "steelblue") +
coord_flip() +
scale_x_discrete(limits = rev) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
text = element_text(family = "Corbel")#,
#axis.text.x = element_text(angle = 45, vjust = 1, hjust=1, size = 9)
)
skills_df %>%
head(30) %>%
mutate(
term = as_factor(term)
) %>%
filter(term != "Analytics") %>% ### This category is largest - which makes sense, but we know it from the job description :)
ggplot(aes(x = fct_infreq(term), y = count)) +
geom_bar(stat = 'identity', fill = "steelblue", color = "grey20") +
coord_flip() +
scale_x_discrete(limits = rev) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
text = element_text(family = "Corbel")#,
#axis.text.x = element_text(angle = 45, vjust = 1, hjust=1, size = 9)
)
skills_df %>%
head(30) %>%
mutate(
term = as_factor(term)
) %>%
filter(term != "Analytics") %>% ### This category is largest - which makes sense, but we know it from the job description :)
ggplot(aes(x = fct_infreq(term), y = count)) +
geom_bar(stat = 'identity', fill = "steelblue", color = "grey20") +
coord_flip() +
scale_x_discrete(limits = rev) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
text = element_text(family = "Corbel")#,
#axis.text.x = element_text(angle = 45, vjust = 1, hjust=1, size = 9)
) +
labs(
x = "GPT-detected keyword",
y = "Count"
)
library(httr)
library(tidyverse)
library(jsonlite)
library(rvest)
library(reticulate)
skills <- read_rds("adzuna_skills.rds") %>%
str_to_lower()
skills_df <- data.frame(skills = skills) %>%
group_by(skills) %>%
summarize(
keyword_count = n()
) %>%
arrange(desc(keyword_count))
## This will be easiest to do by looping over the key terms
key_terms <- c("analy", "english", "german", "french", "italian",
"excel", "python", "flexib", "business", "power", "azure", "aws",
"creativ", "curio", "detail", "communicat", "report", "tableau",
"data quality", "trend", "vba", "present", "project", "agile",
"cloud", "compliance", "cooper|collab|team", "dashboard", "warehouse",
"decision", "consulting", "sap", "data mana", "machine learn|ml",
"kpi", "leadership", "sql", "automation", "research", "reliab",
"rest|api", "stakeholder", "problem", "interpers", "(?<!\\w)r(?!\\w)",
"logist"
)
skills_df <- data.frame(key_terms = c(), count = c())
for (term in key_terms) {
skill_count <- str_extract(skills, term) %>%
na.omit() %>%
length()
skills_df <- skills_df %>%
rbind(c(term, skill_count))
}
skills_df <- skills_df %>%
rename(
term =  1, count = 2
) %>%
mutate(count = as.numeric(count)) %>% ##Note count got converted to chr silently in the previous step
arrange(desc(count))
###Transform abbreviations back to human readables
skills_df <- skills_df %>%
mutate(
term = case_when(   ### I could have used the default here to just focus on the terms that needed mending, but I decided I wanted nice, standardized names on the graph.
term == "analy" ~ "Analytics",
term == "english" ~ "English",
term == "german" ~ "German",
term == "french" ~ "French",
term == "italian" ~ "Italian",
term == "excel" ~ "Excel",
term == "python" ~ "Python",
term == "flexib" ~ "Flexible",
term == "business" ~ "Business awareness",
term == "power" ~ "Power BI",
term == "azure" ~ "Azure",
term == "aws" ~ "AWS",
term == "creativ" ~ "Creativity",
term == "curio" ~ "Curiosity",
term == "detail" ~ "Attention to detail",
term == "communicat|present" ~ "Communication and presentation skills",
term == "report" ~ "Reporting experience",
term == "tableau" ~ "Tableu",
term == "data quality" ~ "Data quality management",
term == "trend" ~ "Tren analysis",
term == "vba" ~ "VBA",
term == "project" ~ "Project management",
term == "agile" ~ "Agile",
term == "cloud" ~ "Cloud",
term == "compliance" ~ "Compliance",
term == "cooper|collab|team|interpers" ~ "Interpersonal and collaboration skills",
term == "dashboard" ~ "Dashboard design",
term == "warehouse" ~ "Data warehouse experience",
term == "decision" ~ "Decision making experience",
term == "consulting" ~ "Consulting experience",
term == "sap" ~ "SAP",
term == "data mana" ~ "Data management",
term == "machine learn|ml" ~ "Machine learning skills",
term == "kpi" ~ "KPIs",
term == "leadership" ~ "Leadership",
term == "sql" ~ "SQL/NoSQL",
term == "automation" ~ "Automation experience",
term == "research" ~ "Research experience",
term == "reliab" ~ "Proven reliability",
term == "rest|api" ~ "API skills",
term == "stakeholder" ~ "Stakeholder management",
term == "problem" ~ "Problem solving",
term == "(?<!\\w)r(?!\\w)" ~ "R",
term == "logist" ~ "Logistics"
)
)
skills_df %>%
head(30) %>%
mutate(
term = as_factor(term)
) %>%
filter(term != "Analytics") %>% ### This category is largest - which makes sense, but we know it from the job description :)
ggplot(aes(x = fct_infreq(term), y = count)) +
geom_bar(stat = 'identity', fill = "steelblue", color = "grey20") +
coord_flip() +
scale_x_discrete(limits = rev) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
text = element_text(family = "Corbel")#,
#axis.text.x = element_text(angle = 45, vjust = 1, hjust=1, size = 9)
) +
labs(
x = "GPT-detected keyword",
y = "Count"
)
View(skills_df)
skills <- read_rds("adzuna_skills.rds") %>%
str_to_lower()
skills_df <- data.frame(skills = skills) %>%
group_by(skills) %>%
summarize(
keyword_count = n()
) %>%
arrange(desc(keyword_count))
## This will be easiest to do by looping over the key terms
key_terms <- c("analy", "english", "german", "french", "italian",
"excel", "python", "flexib", "business", "power", "azure", "aws",
"creativ", "curio", "detail", "communicat", "report", "tableau",
"data quality", "trend", "vba", "present", "project", "agile",
"cloud", "compliance", "cooper|collab|team", "dashboard", "warehouse",
"decision", "consulting", "sap", "data mana", "machine learn|ml",
"kpi", "leadership", "sql", "automation", "research", "reliab",
"rest|api", "stakeholder", "problem", "interpers", "(?<!\\w)r(?!\\w)",
"logist"
)
skills_df <- data.frame(key_terms = c(), count = c())
for (term in key_terms) {
skill_count <- str_extract(skills, term) %>%
na.omit() %>%
length()
skills_df <- skills_df %>%
rbind(c(term, skill_count))
}
skills_df <- skills_df %>%
rename(
term =  1, count = 2
) %>%
mutate(count = as.numeric(count)) %>% ##Note count got converted to chr silently in the previous step
arrange(desc(count))
###Transform abbreviations back to human readables
skills_df <- skills_df %>%
mutate(
term = case_when(   ### I could have used the default here to just focus on the terms that needed mending, but I decided I wanted nice, standardized names on the graph.
term == "analy" ~ "Analytics",
term == "english" ~ "English",
term == "german" ~ "German",
term == "french" ~ "French",
term == "italian" ~ "Italian",
term == "excel" ~ "Excel",
term == "python" ~ "Python",
term == "flexib" ~ "Flexible",
term == "business" ~ "Business awareness",
term == "power" ~ "Power BI",
term == "azure" ~ "Azure",
term == "aws" ~ "AWS",
term == "creativ" ~ "Creativity",
term == "curio" ~ "Curiosity",
term == "detail" ~ "Attention to detail",
term == "communicat" ~ "Communication skills",
term == "report" ~ "Reporting experience",
term == "tableau" ~ "Tableu",
term == "data quality" ~ "Data quality management",
term == "trend" ~ "Tren analysis",
term == "vba" ~ "VBA",
term == "present" ~ "Presentation skills",
term == "project" ~ "Project management",
term == "agile" ~ "Agile",
term == "cloud" ~ "Cloud",
term == "compliance" ~ "Compliance",
term == "cooper|collab|team" ~ "Collaboration and teamwork",
term == "dashboard" ~ "Dashboard design",
term == "warehouse" ~ "Data warehouse experience",
term == "decision" ~ "Decision making experience",
term == "consulting" ~ "Consulting experience",
term == "sap" ~ "SAP",
term == "data mana" ~ "Data management",
term == "machine learn|ml" ~ "Machine learning skills",
term == "kpi" ~ "KPIs",
term == "leadership" ~ "Leadership",
term == "sql" ~ "SQL/NoSQL",
term == "automation" ~ "Automation experience",
term == "research" ~ "Research experience",
term == "reliab" ~ "Proven reliability",
term == "rest|api" ~ "API skills",
term == "stakeholder" ~ "Stakeholder management",
term == "problem" ~ "Problem solving",
term == "interpers" ~ "Interpersonal skills",
term == "(?<!\\w)r(?!\\w)" ~ "R",
term == "logist" ~ "Logistics"
)
)
skills_df %>%
head(30) %>%
mutate(
term = as_factor(term)
) %>%
filter(term != "Analytics") %>% ### This category is largest - which makes sense, but we know it from the job description :)
ggplot(aes(x = fct_infreq(term), y = count)) +
geom_bar(stat = 'identity', fill = "steelblue", color = "grey20") +
coord_flip() +
scale_x_discrete(limits = rev) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
text = element_text(family = "Corbel")#,
#axis.text.x = element_text(angle = 45, vjust = 1, hjust=1, size = 9)
) +
labs(
x = "GPT-detected keyword",
y = "Count"
)
skills <- read_rds("adzuna_skills.rds") %>%
str_to_lower()
skills_df <- data.frame(skills = skills) %>%
group_by(skills) %>%
summarize(
keyword_count = n()
) %>%
arrange(desc(keyword_count))
## This will be easiest to do by looping over the key terms
key_terms <- c("analy", "english", "german", "french", "italian",
"excel", "python", "flexib", "business", "power", "azure", "aws",
"creativ", "curio", "detail", "communicat|present", "report", "tableau",
"data quality", "trend", "vba", "project", "agile",
"cloud", "compliance", "cooper|collab|team|interpers", "dashboard", "warehouse",
"decision", "consulting", "sap", "data mana", "machine learn|ml",
"kpi", "leadership", "sql", "automation", "research", "reliab",
"rest|api", "stakeholder", "problem", "(?<!\\w)r(?!\\w)",
"logist"
)
skills_df <- data.frame(key_terms = c(), count = c())
for (term in key_terms) {
skill_count <- str_extract(skills, term) %>%
na.omit() %>%
length()
skills_df <- skills_df %>%
rbind(c(term, skill_count))
}
skills_df <- skills_df %>%
rename(
term =  1, count = 2
) %>%
mutate(count = as.numeric(count)) %>% ##Note count got converted to chr silently in the previous step
arrange(desc(count))
###Transform abbreviations back to human readables
skills_df <- skills_df %>%
mutate(
term = case_when(   ### I could have used the default here to just focus on the terms that needed mending, but I decided I wanted nice, standardized names on the graph.
term == "analy" ~ "Analytics",
term == "english" ~ "English",
term == "german" ~ "German",
term == "french" ~ "French",
term == "italian" ~ "Italian",
term == "excel" ~ "Excel",
term == "python" ~ "Python",
term == "flexib" ~ "Flexible",
term == "business" ~ "Business awareness",
term == "power" ~ "Power BI",
term == "azure" ~ "Azure",
term == "aws" ~ "AWS",
term == "creativ" ~ "Creativity",
term == "curio" ~ "Curiosity",
term == "detail" ~ "Attention to detail",
term == "communicat|present" ~ "Communication and presentation skills",
term == "report" ~ "Reporting experience",
term == "tableau" ~ "Tableu",
term == "data quality" ~ "Data quality management",
term == "trend" ~ "Tren analysis",
term == "vba" ~ "VBA",
term == "project" ~ "Project management",
term == "agile" ~ "Agile",
term == "cloud" ~ "Cloud",
term == "compliance" ~ "Compliance",
term == "cooper|collab|team|interpers" ~ "Interpersonal and collaboration skills",
term == "dashboard" ~ "Dashboard design",
term == "warehouse" ~ "Data warehouse experience",
term == "decision" ~ "Decision making experience",
term == "consulting" ~ "Consulting experience",
term == "sap" ~ "SAP",
term == "data mana" ~ "Data management",
term == "machine learn|ml" ~ "Machine learning skills",
term == "kpi" ~ "KPIs",
term == "leadership" ~ "Leadership",
term == "sql" ~ "SQL/NoSQL",
term == "automation" ~ "Automation experience",
term == "research" ~ "Research experience",
term == "reliab" ~ "Proven reliability",
term == "rest|api" ~ "API skills",
term == "stakeholder" ~ "Stakeholder management",
term == "problem" ~ "Problem solving",
term == "(?<!\\w)r(?!\\w)" ~ "R",
term == "logist" ~ "Logistics"
)
)
View(skills_df)
skills_df %>%
head(30) %>%
mutate(
term = as_factor(term)
) %>%
filter(term != "Analytics") %>% ### This category is largest - which makes sense, but we know it from the job description :)
ggplot(aes(x = fct_infreq(term), y = count)) +
geom_bar(stat = 'identity', fill = "steelblue", color = "grey20") +
coord_flip() +
scale_x_discrete(limits = rev) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
text = element_text(family = "Corbel")#,
#axis.text.x = element_text(angle = 45, vjust = 1, hjust=1, size = 9)
) +
labs(
x = "GPT-detected keyword",
y = "Count"
)
library(httr)
library(tidyverse)
library(jsonlite)
library(rvest)
library(reticulate)
adzuna_api_returns_14jul23 <- readRDS("adzuna_api_returns_14jul23.rds")
adzuna_api_returns_20jul23 <- readRDS("adzuna_api_returns_20jul23.rds")
adzuna_api_returns <- rbind(adzuna_api_returns_14jul23,
adzuna_api_returns_20jul23) %>%
distinct()
